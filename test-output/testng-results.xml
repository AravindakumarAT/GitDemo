<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="13" passed="11" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-02-25T12:19:15 IST" name="Loan Department" finished-at="2025-02-25T12:19:15 IST" duration-ms="206">
    <groups>
      <group name="smoke">
        <method signature="Day1.Test1()[pri:0, instance:test.Day1@1817d444]" name="Test1" class="test.Day1"/>
        <method signature="Day3.MobileLoginCarLoan()[pri:0, instance:test.Day3@294425a7]" name="MobileLoginCarLoan" class="test.Day3"/>
        <method signature="Day4.RESTAPILoginHomeLoan()[pri:0, instance:test.Day4@37afeb11]" name="RESTAPILoginHomeLoan" class="test.Day4"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2025-02-25T12:19:15 IST" name="Personal Loan" finished-at="2025-02-25T12:19:15 IST" duration-ms="44">
      <class name="test.Day1">
        <test-method is-config="true" signature="preRequistie()[pri:0, instance:test.Day1@1817d444]" started-at="2025-02-25T12:19:15 IST" name="preRequistie" finished-at="2025-02-25T12:19:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preRequistie -->
        <test-method signature="Test1()[pri:0, instance:test.Day1@1817d444]" started-at="2025-02-25T12:19:15 IST" name="Test1" finished-at="2025-02-25T12:19:15 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method signature="Test2()[pri:0, instance:test.Day1@1817d444]" started-at="2025-02-25T12:19:15 IST" name="Test2" finished-at="2025-02-25T12:19:15 IST" duration-ms="4" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.Day1.Test2(Day1.java:20)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test2 -->
        <test-method is-config="true" signature="lastExecution()[pri:0, instance:test.Day1@1817d444]" started-at="2025-02-25T12:19:15 IST" name="lastExecution" finished-at="2025-02-25T12:19:15 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastExecution -->
      </class> <!-- test.Day1 -->
      <class name="test.Day2">
        <test-method is-config="true" signature="preRequistie()[pri:0, instance:test.Day2@41e36e46]" started-at="2025-02-25T12:19:15 IST" name="preRequistie" finished-at="2025-02-25T12:19:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preRequistie -->
        <test-method signature="Test3()[pri:0, instance:test.Day2@41e36e46]" started-at="2025-02-25T12:19:15 IST" name="Test3" finished-at="2025-02-25T12:19:15 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test3 -->
      </class> <!-- test.Day2 -->
    </test> <!-- Personal Loan -->
    <test started-at="2025-02-25T12:19:15 IST" name="Car Loan" finished-at="2025-02-25T12:19:15 IST" duration-ms="28">
      <class name="test.Day3">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:test.Day3@294425a7]" started-at="2025-02-25T12:19:15 IST" name="beforeClass" finished-at="2025-02-25T12:19:15 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.Day3@294425a7]" started-at="2025-02-25T12:19:15 IST" name="beforeMethod" finished-at="2025-02-25T12:19:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="WebLoginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Day3@294425a7]" started-at="2025-02-25T12:19:15 IST" name="WebLoginCarLoan" finished-at="2025-02-25T12:19:15 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carloan.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLoginCarLoan -->
        <test-method signature="MobileLoginCarLoan()[pri:0, instance:test.Day3@294425a7]" started-at="2025-02-25T12:19:15 IST" name="MobileLoginCarLoan" finished-at="2025-02-25T12:19:15 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginCarLoan -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.Day3@294425a7]" started-at="2025-02-25T12:19:15 IST" name="beforeMethod" finished-at="2025-02-25T12:19:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.Day3@294425a7]" started-at="2025-02-25T12:19:15 IST" name="beforeMethod" finished-at="2025-02-25T12:19:15 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MobileSignOut(java.lang.String,java.lang.String)[pri:0, instance:test.Day3@294425a7]" started-at="2025-02-25T12:19:15 IST" name="MobileSignOut" data-provider="getData" finished-at="2025-02-25T12:19:15 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[user1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pass1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignOut -->
        <test-method signature="MobileSignOut(java.lang.String,java.lang.String)[pri:0, instance:test.Day3@294425a7]" started-at="2025-02-25T12:19:15 IST" name="MobileSignOut" data-provider="getData" finished-at="2025-02-25T12:19:15 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[user2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pass2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignOut -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.Day3@294425a7]" started-at="2025-02-25T12:19:15 IST" name="beforeMethod" finished-at="2025-02-25T12:19:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MobileSignOut(java.lang.String,java.lang.String)[pri:0, instance:test.Day3@294425a7]" started-at="2025-02-25T12:19:15 IST" name="MobileSignOut" data-provider="getData" finished-at="2025-02-25T12:19:15 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[user3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pass3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignOut -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.Day3@294425a7]" started-at="2025-02-25T12:19:15 IST" name="beforeMethod" finished-at="2025-02-25T12:19:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.Day3@294425a7]" started-at="2025-02-25T12:19:15 IST" name="beforeMethod" finished-at="2025-02-25T12:19:15 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="APILoginCarLoan()[pri:0, instance:test.Day3@294425a7]" started-at="2025-02-25T12:19:15 IST" name="APILoginCarLoan" finished-at="2025-02-25T12:19:15 IST" depends-on-methods="test.Day3.WebLoginCarLoan" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APILoginCarLoan -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:test.Day3@294425a7]" started-at="2025-02-25T12:19:15 IST" name="afterClass" finished-at="2025-02-25T12:19:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- test.Day3 -->
    </test> <!-- Car Loan -->
    <test started-at="2025-02-25T12:19:15 IST" name="Home Loan" finished-at="2025-02-25T12:19:15 IST" duration-ms="15">
      <class name="test.Day3">
        <test-method is-config="true" signature="beforeSuit()[pri:0, instance:test.Day3@294425a7]" started-at="2025-02-25T12:19:15 IST" name="beforeSuit" finished-at="2025-02-25T12:19:15 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuit -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:test.Day3@294425a7]" started-at="2025-02-25T12:19:15 IST" name="afterSuite" finished-at="2025-02-25T12:19:15 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- test.Day3 -->
      <class name="test.Day4">
        <test-method signature="MobileLoginHomeLoan()[pri:0, instance:test.Day4@37afeb11]" started-at="2025-02-25T12:19:15 IST" name="MobileLoginHomeLoan" finished-at="2025-02-25T12:19:15 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginHomeLoan -->
        <test-method signature="RESTAPILoginHomeLoan()[pri:0, instance:test.Day4@37afeb11]" started-at="2025-02-25T12:19:15 IST" name="RESTAPILoginHomeLoan" finished-at="2025-02-25T12:19:15 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RESTAPILoginHomeLoan -->
        <test-method signature="WebLoginHomeLoan(java.lang.String)[pri:0, instance:test.Day4@37afeb11]" started-at="2025-02-25T12:19:15 IST" name="WebLoginHomeLoan" finished-at="2025-02-25T12:19:15 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[homeloan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLoginHomeLoan -->
      </class> <!-- test.Day4 -->
    </test> <!-- Home Loan -->
  </suite> <!-- Loan Department -->
</testng-results>
